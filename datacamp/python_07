# Import 
import pandas as pd

# CSV
StockPrices = pd.read_csv(fpath_csv, parse_dates=['Date'])

# Sort
StockPrices = StockPrices.sort_values(by='Date')
print(StockPrices.head())

# Calculated Field
StockPrices['Returns'] = StockPrices['Adjusted'].pct_change()

# Plot Calculated Field
StockPrices['Returns'].plot()
plt.show()

# Convert Decimals to Percentages
percent_return = StockPrices['Returns']*100

# Drop NA
returns_plot = percent_return.dropna()

# Histogram
plt.hist(returns_plot, bins=75)
plt.show()



# Import 
import numpy as np

# Average
mean_return_daily = np.mean(StockPrices['Returns'])
print(mean_return_daily)

# Calculated Field
mean_return_annualized = ((1+mean_return_daily)**252)-1
print(mean_return_annualized)

# Standard Deviation 
sigma_daily = np.std(StockPrices['Returns'])
print(sigma_daily)

# Daily Variance
variance_daily = sigma_daily**2
print(variance_daily)

# Standard Deviation 
sigma_annualized = sigma_daily*np.sqrt(252)
print(sigma_annualized)

# Annual Variance
variance_annualized = sigma_annualized**2
print(variance_annualized)



# Import 
from scipy.stats import skew

# Drop NAs
clean_returns = StockPrices['Returns'].dropna()

# Skew
returns_skewness = skew(clean_returns)
print(returns_skewness)



# Import 
from scipy.stats import kurtosis

# Kurtosis
excess_kurtosis = kurtosis(clean_returns)
print(excess_kurtosis)

# Fourth Movement
fourth_moment = excess_kurtosis + 3
print(fourth_moment)



# Import 
from scipy.stats import shapiro

# Shapiro-Wilk 
shapiro_results = shapiro(clean_returns)
print("Shapiro results:", shapiro_results)

# P-Value 
p_value = shapiro_results[1]
print("P-value: ", p_value)
